name: PP Get latest PowerPlatform changes

on:
  workflow_dispatch:
    inputs:
      environment:
        type: text
        description: The environment to get latest changes from
        default: Dev
      solutionName:
        type: text
        description: The name of the solution
        default: BcSampleAppsSolution
      createBranch: 
        type: boolean
        description: Create a new branch and PR
        default: true

env: 
  newBranchName: workflow/pullFrom_${{github.event.inputs.environment}}

jobs:
  prepare-branch: 
    if: github.event.inputs.createBranch == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create branch
        run: git checkout -b ${{env.newBranchName}}; git push --set-upstream origin ${{env.newBranchName}}
    
  get-changes:
    runs-on: ubuntu-latest
    environment: ${{github.event.inputs.environment}}
    env:
      solutionUniqueName: ${{github.event.inputs.solutionName}}
    steps:
      - name: Check if main branch
        if: github.ref_name == 'main' && github.event.input.createBranch == 'true'
        run: echo "Please create a new branch to avoid direct commits to main. Current branch -->" + ${{github.ref_name}};  exit 2;

      - name: Checkout code
        if: github.event.input.createBranch != 'true'
        uses: actions/checkout@v3

      - name: Checkout new branch
        if: github.event.input.createBranch == 'true'
        uses: actions/checkout@v3
        with:
          ref: ${{env.newBranchName}}

      - name: who-am-i action
        uses: microsoft/powerplatform-actions/who-am-i@v0
        with:
          user-name: ${{secrets.PowerUser}}
          password-secret: ${{secrets.PowerPassword}}
          environment-url: ${{secrets.PowerEnv}}

      - name: export-solution action
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          user-name: ${{secrets.PowerUser}}
          password-secret: ${{secrets.PowerPassword}}
          environment-url: ${{secrets.PowerEnv}}
          solution-name: ${{env.solutionUniqueName}} #This is using the unique name so we can specify if dev or normal version
          solution-output-file: ${{github.event.inputs.solutionName}}.zip

      - name: unpack-solution action
        uses: microsoft/powerplatform-actions/unpack-solution@v0
        with:
          solution-file: ${{github.event.inputs.solutionName}}.zip
          solution-folder: ${{github.event.inputs.solutionName}}
          solution-type: "Unmanaged"
          overwrite-files: true
          process-canvas-apps: true

      - name: Remove zip file
        run: rm ${{github.event.inputs.solutionName}}.zip

      - name: Clean up settings
        shell: pwsh
        run: |
          .github/actions/script/updateSolutionFile.ps1

      - name: Commit changes (if there are any)
        shell: pwsh
        run: .github/actions/script/commitGitChanges.ps1 -solutionName ${{github.event.inputs.solutionName}} -environmentName ${{github.event.inputs.environment}}

  create-PR: 
    if: github.event.inputs.createBranch == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout new branch
        uses: actions/checkout@v3
        with:
          ref: ${{env.newBranchName}}

      - name: Create pull request
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -d '{ "title": "Pull PP changes", "head": "${{env.newBranchName}}", "base": "main", "body": "This is the pull request body", "labels": ["enhancement", "bug"] }' https://api.github.com/repos/${{ github.repository }}/pulls
